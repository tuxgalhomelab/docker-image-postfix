diff -u -r a/postfix-3.5.13/conf/postfix-script b/postfix-3.5.13/conf/postfix-script
--- a/postfix-3.5.13/conf/postfix-script	2022-07-10 18:44:14.417026857 -0700
+++ b/postfix-3.5.13/conf/postfix-script	2022-07-10 18:44:21.401191574 -0700
@@ -320,9 +320,9 @@
 
 	# Check Postfix root-owned directory owner/permissions.
 
-	find $queue_directory/. $queue_directory/pid \
-	    -prune ! -user root \
-	    -exec $WARN not owned by root: {} \;
+	# find $queue_directory/. $queue_directory/pid \
+	#     -prune ! -user root \
+	#     -exec $WARN not owned by root: {} \;
 
 	find $queue_directory/. $queue_directory/pid \
 	    -prune \( -perm -020 -o -perm -002 \) \
@@ -338,40 +338,40 @@
 	}
 	todo=`echo "$todo" | tr ' ' '\12' | sort -u`
 
-	find $todo ! -user root \
-	    -exec $WARN not owned by root: {} \;
+	# find $todo ! -user root \
+	#     -exec $WARN not owned by root: {} \;
 
 	# Handle symlinks separately
 	find -L $todo \( -perm -020 -o -perm -002 \) \
 	    -exec $WARN group or other writable: {} \;
 
-	find $todo -type l | while read f; do \
-	    # makedefs out known to be a symlink and OK
-	    if [ "$f" != "/etc/postfix/./makedefs.out" ]; then \
-	      readlink "$f" | grep -q / && $WARN symlink leaves directory: "$f"; \
-	    fi \
-	done; \
+	# find $todo -type l | while read f; do \
+	#     # makedefs out known to be a symlink and OK
+	#     if [ "$f" != "/etc/postfix/./makedefs.out" ]; then \
+	#       readlink "$f" | grep -q / && $WARN symlink leaves directory: "$f"; \
+	#     fi \
+	# done; \
 
 	# Check Postfix mail_owner-owned directory tree owner/permissions.
 
-	find $data_directory/. ! -user $mail_owner \
-	    -exec $WARN not owned by $mail_owner: {} \;
+	# find $data_directory/. ! -user $mail_owner \
+	#     -exec $WARN not owned by $mail_owner: {} \;
 
 	find $data_directory/. \( -perm -020 -o -perm -002 \) \
 	    -exec $WARN group or other writable: {} \;
 
 	# Check Postfix mail_owner-owned directory tree owner.
 
-	find `ls -d $queue_directory/* | \
-	    egrep '/(saved|incoming|active|defer|deferred|bounce|hold|trace|corrupt|public|private|flush)$'` \
-	    ! \( -type p -o -type s \) ! -user $mail_owner \
-		-exec $WARN not owned by $mail_owner: {} \;
+	# find `ls -d $queue_directory/* | \
+	#    egrep '/(saved|incoming|active|defer|deferred|bounce|hold|trace|corrupt|public|private|flush)$'` \
+	#    ! \( -type p -o -type s \) ! -user $mail_owner \
+	# -exec $WARN not owned by $mail_owner: {} \;
 
 	# WARNING: this should not descend into the maildrop directory.
 	# maildrop is the least trusted Postfix directory.
 
-	find $queue_directory/maildrop -prune ! -user $mail_owner \
-	    -exec $WARN not owned by $mail_owner: $queue_directory/maildrop \;
+	# find $queue_directory/maildrop -prune ! -user $mail_owner \
+	#     -exec $WARN not owned by $mail_owner: $queue_directory/maildrop \;
 
 	# Check Postfix setgid_group-owned directory and file group/permissions.
 
@@ -379,9 +379,9 @@
 	test -n "$check_shared_files" && 
 	   todo="$command_directory/postqueue $command_directory/postdrop $todo"
 
-	find $todo \
-	    -prune ! -group $setgid_group \
-	    -exec $WARN not owned by group $setgid_group: {} \;
+	# find $todo \
+	#     -prune ! -group $setgid_group \
+	#     -exec $WARN not owned by group $setgid_group: {} \;
 
 	test -n "$check_shared_files" &&
 	find $command_directory/postqueue $command_directory/postdrop \
@@ -393,8 +393,8 @@
 	for dir in bin etc lib sbin usr
 	do
 	    test -d $dir && {
-		find $dir ! -user root \
-		    -exec $WARN not owned by root: $queue_directory/{} \;
+		# find $dir ! -user root \
+		#     -exec $WARN not owned by root: $queue_directory/{} \;
 
 		find $dir -type f -print | while read path
 		do
diff -u -r a/postfix-3.5.13/src/global/dynamicmaps.c b/postfix-3.5.13/src/global/dynamicmaps.c
--- a/postfix-3.5.13/src/global/dynamicmaps.c	2022-07-10 18:44:14.469028084 -0700
+++ b/postfix-3.5.13/src/global/dynamicmaps.c	2022-07-10 18:44:21.457192894 -0700
@@ -136,12 +136,16 @@
 		 dict_type, dp->soname);
 	return (0);
     }
+
+#if 0
     if (st.st_uid != 0 || (st.st_mode & (S_IWGRP | S_IWOTH)) != 0) {
 	msg_warn("unsupported dictionary type: %s "
 		 "(%s: file is owned or writable by non-root users)",
 		 dict_type, dp->soname);
 	return (0);
     }
+#endif
+
     fn[0].name = dp->dict_name;
     fn[1].name = 0;
     load_library_symbols(dp->soname, fn, (LIB_DP *) 0);
@@ -180,10 +184,14 @@
 	msg_fatal("unsupported dictionary type: %s (%s: %m). "
 		  "Is the postfix-%s package installed?",
 		  dict_type, dp->soname, dict_type);
+
+#if 0
     if (st.st_uid != 0 || (st.st_mode & (S_IWGRP | S_IWOTH)) != 0)
 	msg_fatal("unsupported dictionary type: %s "
 		  "(%s: file is owned or writable by non-root users)",
 		  dict_type, dp->soname);
+#endif
+
     fn[0].name = dp->mkmap_name;
     fn[1].name = 0;
     load_library_symbols(dp->soname, fn, (LIB_DP *) 0);
@@ -251,10 +259,14 @@
     if ((fp = vstream_fopen(path, O_RDONLY, 0)) != 0) {
 	if (fstat(vstream_fileno(fp), &st) < 0)
 	    msg_fatal("%s: fstat failed; %m", path);
+
+#if 0
 	if (st.st_uid != 0 || (st.st_mode & (S_IWGRP | S_IWOTH)) != 0) {
 	    msg_warn("%s: file is owned or writable by non-root users"
 		     " -- skipping this file", path);
 	} else {
+#endif
+
 	    buf = vstring_alloc(100);
 	    while (vstring_get_nonl(buf, fp) != VSTREAM_EOF) {
 		cp = vstring_str(buf);
@@ -293,7 +305,11 @@
 		saved_mkmap_open_hook = mkmap_open_extend(dymap_mkmap_lookup);
 		saved_dict_mapnames_hook = dict_mapnames_extend(dymap_list);
 	    }
+
+#if 0
 	}
+#endif
+
 	vstream_fclose(fp);
     } else if (errno != ENOENT) {
 	msg_fatal("%s: file open failed: %m", path);
diff -u -r a/postfix-3.5.13/src/global/mail_params.c b/postfix-3.5.13/src/global/mail_params.c
--- a/postfix-3.5.13/src/global/mail_params.c	2022-07-10 18:44:14.465027989 -0700
+++ b/postfix-3.5.13/src/global/mail_params.c	2022-07-10 18:44:21.457192894 -0700
@@ -939,7 +939,11 @@
     check_default_privs();
     check_mail_owner();
     check_sgid_group();
+
+#if 0
     check_overlap();
+#endif
+
     dict_db_cache_size = var_db_read_buf;
     dict_lmdb_map_size = var_lmdb_map_size;
     inet_windowsize = var_inet_windowsize;
diff -u -r a/postfix-3.5.13/src/master/master.c b/postfix-3.5.13/src/master/master.c
--- a/postfix-3.5.13/src/master/master.c	2022-07-10 18:44:14.473028180 -0700
+++ b/postfix-3.5.13/src/master/master.c	2022-07-10 18:44:21.457192894 -0700
@@ -342,10 +342,13 @@
      * privileges for selected operations. That's right - it takes privileges
      * to toss privileges.
      */
+
+#if 0
     if (getuid() != 0)
 	msg_fatal("the master command is reserved for the superuser");
     if (unsafe() != 0)
 	msg_fatal("the master command must not run as a set-uid process");
+#endif
 
     /*
      * Process JCL.
diff -u -r a/postfix-3.5.13/src/postfix/postfix.c b/postfix-3.5.13/src/postfix/postfix.c
--- a/postfix-3.5.13/src/postfix/postfix.c	2022-07-10 18:44:14.473028180 -0700
+++ b/postfix-3.5.13/src/postfix/postfix.c	2022-07-10 18:44:21.457192894 -0700
@@ -520,12 +520,15 @@
      * privileges for selected operations. That's right - it takes privileges
      * to toss privileges.
      */
+
+#if 0
     if (getuid() != 0) {
 	msg_error("to submit mail, use the Postfix sendmail command");
 	msg_fatal("the postfix command is reserved for the superuser");
     }
     if (unsafe() != 0)
 	msg_fatal("the postfix command must not run as a set-uid process");
+#endif
 
     /*
      * Parse switches.
diff -u -r a/postfix-3.5.13/src/postsuper/postsuper.c b/postfix-3.5.13/src/postsuper/postsuper.c
--- a/postfix-3.5.13/src/postsuper/postsuper.c	2022-07-10 18:44:14.453027708 -0700
+++ b/postfix-3.5.13/src/postsuper/postsuper.c	2022-07-10 18:44:21.433192329 -0700
@@ -1328,10 +1328,13 @@
      * the secondary groups, the process environment, and so on. Otherwise,
      * accidents can happen. If not with Postfix, then with other software.
      */
+
+#if 0
     if (unsafe() != 0)
 	msg_fatal("this postfix command must not run as a set-uid process");
     if (getuid())
 	msg_fatal("use of this command is reserved for the superuser");
+#endif
 
     /*
      * Parse JCL.
diff -u -r a/postfix-3.5.13/src/util/chroot_uid.c b/postfix-3.5.13/src/util/chroot_uid.c
--- a/postfix-3.5.13/src/util/chroot_uid.c	2022-07-10 18:44:14.505028933 -0700
+++ b/postfix-3.5.13/src/util/chroot_uid.c	2022-07-10 18:44:21.493193745 -0700
@@ -42,6 +42,8 @@
 
 void    chroot_uid(const char *root_dir, const char *user_name)
 {
+
+#if 0
     struct passwd *pwd;
     uid_t   uid;
     gid_t   gid;
@@ -85,4 +87,6 @@
 	msg_info("chroot %s user %s",
 		 root_dir ? root_dir : "(none)",
 		 user_name ? user_name : "(none)");
+#endif
+
 }
diff -u -r a/postfix-3.5.13/src/util/set_eugid.c b/postfix-3.5.13/src/util/set_eugid.c
--- a/postfix-3.5.13/src/util/set_eugid.c	2022-07-10 18:44:14.505028933 -0700
+++ b/postfix-3.5.13/src/util/set_eugid.c	2022-07-10 18:44:21.493193745 -0700
@@ -53,6 +53,8 @@
 
 void    set_eugid(uid_t euid, gid_t egid)
 {
+
+#if 0
     int     saved_errno = errno;
 
     if (geteuid() != 0)
@@ -67,4 +69,6 @@
     if (msg_verbose)
 	msg_info("set_eugid: euid %ld egid %ld", (long) euid, (long) egid);
     errno = saved_errno;
+#endif
+
 }
diff -u -r a/postfix-3.5.13/src/util/set_ugid.c b/postfix-3.5.13/src/util/set_ugid.c
--- a/postfix-3.5.13/src/util/set_ugid.c	2022-07-10 18:44:14.505028933 -0700
+++ b/postfix-3.5.13/src/util/set_ugid.c	2022-07-10 18:44:21.493193745 -0700
@@ -44,6 +44,8 @@
 
 void    set_ugid(uid_t uid, gid_t gid)
 {
+
+#if 0
     int     saved_errno = errno;
 
     if (geteuid() != 0)
@@ -58,4 +60,6 @@
     if (msg_verbose > 1)
 	msg_info("setugid: uid %ld gid %ld", (long) uid, (long) gid);
     errno = saved_errno;
+#endif
+
 }
